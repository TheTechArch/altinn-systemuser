/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilhørende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// samling av alle tilgode beløp og innbetalinger som er brukt i motregningen
    /// </summary>
    [DataContract]
        public partial class HovedKrav :  IEquatable<HovedKrav>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HovedKrav" /> class.
        /// </summary>
        /// <param name="innbetalingBruktImotregning">innbetalingBruktImotregning.</param>
        /// <param name="kreditkravBruktIMotregning">kreditkravBruktIMotregning.</param>
        public HovedKrav(List<InnbetalingBruktIMotregning> innbetalingBruktImotregning = default(List<InnbetalingBruktIMotregning>), List<KreditkravBruktIMotregning> kreditkravBruktIMotregning = default(List<KreditkravBruktIMotregning>))
        {
            this.InnbetalingBruktImotregning = innbetalingBruktImotregning;
            this.KreditkravBruktIMotregning = kreditkravBruktIMotregning;
        }
        
        /// <summary>
        /// Gets or Sets InnbetalingBruktImotregning
        /// </summary>
        [DataMember(Name="innbetalingBruktImotregning", EmitDefaultValue=false)]
        public List<InnbetalingBruktIMotregning> InnbetalingBruktImotregning { get; set; }

        /// <summary>
        /// Gets or Sets KreditkravBruktIMotregning
        /// </summary>
        [DataMember(Name="kreditkravBruktIMotregning", EmitDefaultValue=false)]
        public List<KreditkravBruktIMotregning> KreditkravBruktIMotregning { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class HovedKrav {\n");
            sb.Append("  InnbetalingBruktImotregning: ").Append(InnbetalingBruktImotregning).Append("\n");
            sb.Append("  KreditkravBruktIMotregning: ").Append(KreditkravBruktIMotregning).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as HovedKrav);
        }

        /// <summary>
        /// Returns true if HovedKrav instances are equal
        /// </summary>
        /// <param name="input">Instance of HovedKrav to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(HovedKrav input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.InnbetalingBruktImotregning == input.InnbetalingBruktImotregning ||
                    this.InnbetalingBruktImotregning != null &&
                    input.InnbetalingBruktImotregning != null &&
                    this.InnbetalingBruktImotregning.SequenceEqual(input.InnbetalingBruktImotregning)
                ) && 
                (
                    this.KreditkravBruktIMotregning == input.KreditkravBruktIMotregning ||
                    this.KreditkravBruktIMotregning != null &&
                    input.KreditkravBruktIMotregning != null &&
                    this.KreditkravBruktIMotregning.SequenceEqual(input.KreditkravBruktIMotregning)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InnbetalingBruktImotregning != null)
                    hashCode = hashCode * 59 + this.InnbetalingBruktImotregning.GetHashCode();
                if (this.KreditkravBruktIMotregning != null)
                    hashCode = hashCode * 59 + this.KreditkravBruktIMotregning.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
