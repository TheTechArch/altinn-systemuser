/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilhørende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// rett til å motta en bestemt sum penger (&lt;a href&#x3D;&#x27;https://data.skatteetaten.no/begreper/kreditkrav&#x27;&gt;Begrepsreferanse&lt;/a&gt;)
    /// </summary>
    [DataContract]
        public partial class KreditKrav :  IEquatable<KreditKrav>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KreditKrav" /> class.
        /// </summary>
        /// <param name="kravforfallidentifikator">kravforfallidentifikator (required).</param>
        /// <param name="kravbeskrivelse">kravbeskrivelse.</param>
        /// <param name="kravtype">kravtype.</param>
        /// <param name="kravperiode">kravperiode.</param>
        /// <param name="opprinneligBeloep">opprinneligBeloep (required).</param>
        /// <param name="gjenstaaendeBeloep">gjenstaaendeBeloep (required).</param>
        /// <param name="utbetaltBeloep">utbetaltBeloep (required).</param>
        public KreditKrav(string kravforfallidentifikator = default(string), MultiSpraakTekst kravbeskrivelse = default(MultiSpraakTekst), string kravtype = default(string), Kravperiode kravperiode = default(Kravperiode), double? opprinneligBeloep = default(double?), double? gjenstaaendeBeloep = default(double?), double? utbetaltBeloep = default(double?))
        {
            // to ensure "kravforfallidentifikator" is required (not null)
            if (kravforfallidentifikator == null)
            {
                throw new InvalidDataException("kravforfallidentifikator is a required property for KreditKrav and cannot be null");
            }
            else
            {
                this.Kravforfallidentifikator = kravforfallidentifikator;
            }
            // to ensure "opprinneligBeloep" is required (not null)
            if (opprinneligBeloep == null)
            {
                throw new InvalidDataException("opprinneligBeloep is a required property for KreditKrav and cannot be null");
            }
            else
            {
                this.OpprinneligBeloep = opprinneligBeloep;
            }
            // to ensure "gjenstaaendeBeloep" is required (not null)
            if (gjenstaaendeBeloep == null)
            {
                throw new InvalidDataException("gjenstaaendeBeloep is a required property for KreditKrav and cannot be null");
            }
            else
            {
                this.GjenstaaendeBeloep = gjenstaaendeBeloep;
            }
            // to ensure "utbetaltBeloep" is required (not null)
            if (utbetaltBeloep == null)
            {
                throw new InvalidDataException("utbetaltBeloep is a required property for KreditKrav and cannot be null");
            }
            else
            {
                this.UtbetaltBeloep = utbetaltBeloep;
            }
            this.Kravbeskrivelse = kravbeskrivelse;
            this.Kravtype = kravtype;
            this.Kravperiode = kravperiode;
        }
        
        /// <summary>
        /// Gets or Sets Kravforfallidentifikator
        /// </summary>
        [DataMember(Name="kravforfallidentifikator", EmitDefaultValue=false)]
        public string Kravforfallidentifikator { get; set; }

        /// <summary>
        /// Gets or Sets Kravbeskrivelse
        /// </summary>
        [DataMember(Name="kravbeskrivelse", EmitDefaultValue=false)]
        public MultiSpraakTekst Kravbeskrivelse { get; set; }

        /// <summary>
        /// Gets or Sets Kravtype
        /// </summary>
        [DataMember(Name="kravtype", EmitDefaultValue=false)]
        public string Kravtype { get; set; }

        /// <summary>
        /// Gets or Sets Kravperiode
        /// </summary>
        [DataMember(Name="kravperiode", EmitDefaultValue=false)]
        public Kravperiode Kravperiode { get; set; }

        /// <summary>
        /// Gets or Sets OpprinneligBeloep
        /// </summary>
        [DataMember(Name="opprinneligBeloep", EmitDefaultValue=false)]
        public double? OpprinneligBeloep { get; set; }

        /// <summary>
        /// Gets or Sets GjenstaaendeBeloep
        /// </summary>
        [DataMember(Name="gjenstaaendeBeloep", EmitDefaultValue=false)]
        public double? GjenstaaendeBeloep { get; set; }

        /// <summary>
        /// Gets or Sets UtbetaltBeloep
        /// </summary>
        [DataMember(Name="utbetaltBeloep", EmitDefaultValue=false)]
        public double? UtbetaltBeloep { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KreditKrav {\n");
            sb.Append("  Kravforfallidentifikator: ").Append(Kravforfallidentifikator).Append("\n");
            sb.Append("  Kravbeskrivelse: ").Append(Kravbeskrivelse).Append("\n");
            sb.Append("  Kravtype: ").Append(Kravtype).Append("\n");
            sb.Append("  Kravperiode: ").Append(Kravperiode).Append("\n");
            sb.Append("  OpprinneligBeloep: ").Append(OpprinneligBeloep).Append("\n");
            sb.Append("  GjenstaaendeBeloep: ").Append(GjenstaaendeBeloep).Append("\n");
            sb.Append("  UtbetaltBeloep: ").Append(UtbetaltBeloep).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KreditKrav);
        }

        /// <summary>
        /// Returns true if KreditKrav instances are equal
        /// </summary>
        /// <param name="input">Instance of KreditKrav to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KreditKrav input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Kravforfallidentifikator == input.Kravforfallidentifikator ||
                    (this.Kravforfallidentifikator != null &&
                    this.Kravforfallidentifikator.Equals(input.Kravforfallidentifikator))
                ) && 
                (
                    this.Kravbeskrivelse == input.Kravbeskrivelse ||
                    (this.Kravbeskrivelse != null &&
                    this.Kravbeskrivelse.Equals(input.Kravbeskrivelse))
                ) && 
                (
                    this.Kravtype == input.Kravtype ||
                    (this.Kravtype != null &&
                    this.Kravtype.Equals(input.Kravtype))
                ) && 
                (
                    this.Kravperiode == input.Kravperiode ||
                    (this.Kravperiode != null &&
                    this.Kravperiode.Equals(input.Kravperiode))
                ) && 
                (
                    this.OpprinneligBeloep == input.OpprinneligBeloep ||
                    (this.OpprinneligBeloep != null &&
                    this.OpprinneligBeloep.Equals(input.OpprinneligBeloep))
                ) && 
                (
                    this.GjenstaaendeBeloep == input.GjenstaaendeBeloep ||
                    (this.GjenstaaendeBeloep != null &&
                    this.GjenstaaendeBeloep.Equals(input.GjenstaaendeBeloep))
                ) && 
                (
                    this.UtbetaltBeloep == input.UtbetaltBeloep ||
                    (this.UtbetaltBeloep != null &&
                    this.UtbetaltBeloep.Equals(input.UtbetaltBeloep))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Kravforfallidentifikator != null)
                    hashCode = hashCode * 59 + this.Kravforfallidentifikator.GetHashCode();
                if (this.Kravbeskrivelse != null)
                    hashCode = hashCode * 59 + this.Kravbeskrivelse.GetHashCode();
                if (this.Kravtype != null)
                    hashCode = hashCode * 59 + this.Kravtype.GetHashCode();
                if (this.Kravperiode != null)
                    hashCode = hashCode * 59 + this.Kravperiode.GetHashCode();
                if (this.OpprinneligBeloep != null)
                    hashCode = hashCode * 59 + this.OpprinneligBeloep.GetHashCode();
                if (this.GjenstaaendeBeloep != null)
                    hashCode = hashCode * 59 + this.GjenstaaendeBeloep.GetHashCode();
                if (this.UtbetaltBeloep != null)
                    hashCode = hashCode * 59 + this.UtbetaltBeloep.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
