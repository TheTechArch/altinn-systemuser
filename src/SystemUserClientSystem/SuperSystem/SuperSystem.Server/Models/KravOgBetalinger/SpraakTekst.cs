/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilhørende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// tekst på spesifisert språk (&lt;a href&#x3D;&#x27;https://data.skatteetaten.no/begrep/20b2e244-9fe1-11e5-a9f8-e4115b280940&#x27;&gt;Begrepsreferanse&lt;/a&gt;)
    /// </summary>
    [DataContract]
        public partial class SpraakTekst :  IEquatable<SpraakTekst>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SpraakTekst" /> class.
        /// </summary>
        /// <param name="tekst">tekst (required).</param>
        /// <param name="spraak">spraak (required).</param>
        public SpraakTekst(string tekst = default(string), string spraak = default(string))
        {
            // to ensure "tekst" is required (not null)
            if (tekst == null)
            {
                throw new InvalidDataException("tekst is a required property for SpraakTekst and cannot be null");
            }
            else
            {
                this.Tekst = tekst;
            }
            // to ensure "spraak" is required (not null)
            if (spraak == null)
            {
                throw new InvalidDataException("spraak is a required property for SpraakTekst and cannot be null");
            }
            else
            {
                this.Spraak = spraak;
            }
        }
        
        /// <summary>
        /// Gets or Sets Tekst
        /// </summary>
        [DataMember(Name="tekst", EmitDefaultValue=false)]
        public string Tekst { get; set; }

        /// <summary>
        /// Gets or Sets Spraak
        /// </summary>
        [DataMember(Name="spraak", EmitDefaultValue=false)]
        public string Spraak { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SpraakTekst {\n");
            sb.Append("  Tekst: ").Append(Tekst).Append("\n");
            sb.Append("  Spraak: ").Append(Spraak).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SpraakTekst);
        }

        /// <summary>
        /// Returns true if SpraakTekst instances are equal
        /// </summary>
        /// <param name="input">Instance of SpraakTekst to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SpraakTekst input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Tekst == input.Tekst ||
                    (this.Tekst != null &&
                    this.Tekst.Equals(input.Tekst))
                ) && 
                (
                    this.Spraak == input.Spraak ||
                    (this.Spraak != null &&
                    this.Spraak.Equals(input.Spraak))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Tekst != null)
                    hashCode = hashCode * 59 + this.Tekst.GetHashCode();
                if (this.Spraak != null)
                    hashCode = hashCode * 59 + this.Spraak.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
