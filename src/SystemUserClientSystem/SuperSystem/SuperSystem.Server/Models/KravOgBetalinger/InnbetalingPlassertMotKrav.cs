/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilh√∏rende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// viser detaljer av hvilken innbetaling er plassert mot krav
    /// </summary>
    [DataContract]
        public partial class InnbetalingPlassertMotKrav :  IEquatable<InnbetalingPlassertMotKrav>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InnbetalingPlassertMotKrav" /> class.
        /// </summary>
        /// <param name="innbetalingsIdentifikator">innbetalingsIdentifikator (required).</param>
        /// <param name="plassertBeloep">plassertBeloep (required).</param>
        /// <param name="plassertDato">plassertDato.</param>
        /// <param name="innbetalingsdato">innbetalingsdato.</param>
        /// <param name="innbetaltBeloep">innbetaltBeloep.</param>
        /// <param name="innbetaltFra">innbetaltFra.</param>
        /// <param name="innbetalingstype">innbetalingstype.</param>
        public InnbetalingPlassertMotKrav(string innbetalingsIdentifikator = default(string), double? plassertBeloep = default(double?), DateTime? plassertDato = default(DateTime?), DateTime? innbetalingsdato = default(DateTime?), double? innbetaltBeloep = default(double?), Betalingsinformasjon innbetaltFra = default(Betalingsinformasjon), string innbetalingstype = default(string))
        {
            // to ensure "innbetalingsIdentifikator" is required (not null)
            if (innbetalingsIdentifikator == null)
            {
                throw new InvalidDataException("innbetalingsIdentifikator is a required property for InnbetalingPlassertMotKrav and cannot be null");
            }
            else
            {
                this.InnbetalingsIdentifikator = innbetalingsIdentifikator;
            }
            // to ensure "plassertBeloep" is required (not null)
            if (plassertBeloep == null)
            {
                throw new InvalidDataException("plassertBeloep is a required property for InnbetalingPlassertMotKrav and cannot be null");
            }
            else
            {
                this.PlassertBeloep = plassertBeloep;
            }
            this.PlassertDato = plassertDato;
            this.Innbetalingsdato = innbetalingsdato;
            this.InnbetaltBeloep = innbetaltBeloep;
            this.InnbetaltFra = innbetaltFra;
            this.Innbetalingstype = innbetalingstype;
        }
        
        /// <summary>
        /// Gets or Sets InnbetalingsIdentifikator
        /// </summary>
        [DataMember(Name="innbetalingsIdentifikator", EmitDefaultValue=false)]
        public string InnbetalingsIdentifikator { get; set; }

        /// <summary>
        /// Gets or Sets PlassertBeloep
        /// </summary>
        [DataMember(Name="plassertBeloep", EmitDefaultValue=false)]
        public double? PlassertBeloep { get; set; }

        /// <summary>
        /// Gets or Sets PlassertDato
        /// </summary>
        [DataMember(Name="plassertDato", EmitDefaultValue=false)]
        public DateTime? PlassertDato { get; set; }

        /// <summary>
        /// Gets or Sets Innbetalingsdato
        /// </summary>
        [DataMember(Name="innbetalingsdato", EmitDefaultValue=false)]
        public DateTime? Innbetalingsdato { get; set; }

        /// <summary>
        /// Gets or Sets InnbetaltBeloep
        /// </summary>
        [DataMember(Name="innbetaltBeloep", EmitDefaultValue=false)]
        public double? InnbetaltBeloep { get; set; }

        /// <summary>
        /// Gets or Sets InnbetaltFra
        /// </summary>
        [DataMember(Name="innbetaltFra", EmitDefaultValue=false)]
        public Betalingsinformasjon InnbetaltFra { get; set; }

        /// <summary>
        /// Gets or Sets Innbetalingstype
        /// </summary>
        [DataMember(Name="innbetalingstype", EmitDefaultValue=false)]
        public string Innbetalingstype { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InnbetalingPlassertMotKrav {\n");
            sb.Append("  InnbetalingsIdentifikator: ").Append(InnbetalingsIdentifikator).Append("\n");
            sb.Append("  PlassertBeloep: ").Append(PlassertBeloep).Append("\n");
            sb.Append("  PlassertDato: ").Append(PlassertDato).Append("\n");
            sb.Append("  Innbetalingsdato: ").Append(Innbetalingsdato).Append("\n");
            sb.Append("  InnbetaltBeloep: ").Append(InnbetaltBeloep).Append("\n");
            sb.Append("  InnbetaltFra: ").Append(InnbetaltFra).Append("\n");
            sb.Append("  Innbetalingstype: ").Append(Innbetalingstype).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InnbetalingPlassertMotKrav);
        }

        /// <summary>
        /// Returns true if InnbetalingPlassertMotKrav instances are equal
        /// </summary>
        /// <param name="input">Instance of InnbetalingPlassertMotKrav to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InnbetalingPlassertMotKrav input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.InnbetalingsIdentifikator == input.InnbetalingsIdentifikator ||
                    (this.InnbetalingsIdentifikator != null &&
                    this.InnbetalingsIdentifikator.Equals(input.InnbetalingsIdentifikator))
                ) && 
                (
                    this.PlassertBeloep == input.PlassertBeloep ||
                    (this.PlassertBeloep != null &&
                    this.PlassertBeloep.Equals(input.PlassertBeloep))
                ) && 
                (
                    this.PlassertDato == input.PlassertDato ||
                    (this.PlassertDato != null &&
                    this.PlassertDato.Equals(input.PlassertDato))
                ) && 
                (
                    this.Innbetalingsdato == input.Innbetalingsdato ||
                    (this.Innbetalingsdato != null &&
                    this.Innbetalingsdato.Equals(input.Innbetalingsdato))
                ) && 
                (
                    this.InnbetaltBeloep == input.InnbetaltBeloep ||
                    (this.InnbetaltBeloep != null &&
                    this.InnbetaltBeloep.Equals(input.InnbetaltBeloep))
                ) && 
                (
                    this.InnbetaltFra == input.InnbetaltFra ||
                    (this.InnbetaltFra != null &&
                    this.InnbetaltFra.Equals(input.InnbetaltFra))
                ) && 
                (
                    this.Innbetalingstype == input.Innbetalingstype ||
                    (this.Innbetalingstype != null &&
                    this.Innbetalingstype.Equals(input.Innbetalingstype))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.InnbetalingsIdentifikator != null)
                    hashCode = hashCode * 59 + this.InnbetalingsIdentifikator.GetHashCode();
                if (this.PlassertBeloep != null)
                    hashCode = hashCode * 59 + this.PlassertBeloep.GetHashCode();
                if (this.PlassertDato != null)
                    hashCode = hashCode * 59 + this.PlassertDato.GetHashCode();
                if (this.Innbetalingsdato != null)
                    hashCode = hashCode * 59 + this.Innbetalingsdato.GetHashCode();
                if (this.InnbetaltBeloep != null)
                    hashCode = hashCode * 59 + this.InnbetaltBeloep.GetHashCode();
                if (this.InnbetaltFra != null)
                    hashCode = hashCode * 59 + this.InnbetaltFra.GetHashCode();
                if (this.Innbetalingstype != null)
                    hashCode = hashCode * 59 + this.Innbetalingstype.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
