/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilh√∏rende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// MotregningAvKreditkrav
    /// </summary>
    [DataContract]
        public partial class MotregningAvKreditkrav :  IEquatable<MotregningAvKreditkrav>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MotregningAvKreditkrav" /> class.
        /// </summary>
        /// <param name="motregningsidentifikator">motregningsidentifikator (required).</param>
        /// <param name="innkrevingsmyndighet">innkrevingsmyndighet (required).</param>
        /// <param name="hovedkrav">hovedkrav.</param>
        /// <param name="dekketkrav">kravet som blir dekket i motregningen; beskrivelse av dekket krav slik at det ser ut i disponeringsbrev; dekket krav her er ofte referert som motkrav i fagdomene. (required).</param>
        /// <param name="motregnetdato">motregnetdato (required).</param>
        public MotregningAvKreditkrav(string motregningsidentifikator = default(string), MultiSpraakTekst innkrevingsmyndighet = default(MultiSpraakTekst), HovedKrav hovedkrav = default(HovedKrav), List<DekketKrav> dekketkrav = default(List<DekketKrav>), DateTime? motregnetdato = default(DateTime?))
        {
            // to ensure "motregningsidentifikator" is required (not null)
            if (motregningsidentifikator == null)
            {
                throw new InvalidDataException("motregningsidentifikator is a required property for MotregningAvKreditkrav and cannot be null");
            }
            else
            {
                this.Motregningsidentifikator = motregningsidentifikator;
            }
            // to ensure "innkrevingsmyndighet" is required (not null)
            if (innkrevingsmyndighet == null)
            {
                throw new InvalidDataException("innkrevingsmyndighet is a required property for MotregningAvKreditkrav and cannot be null");
            }
            else
            {
                this.Innkrevingsmyndighet = innkrevingsmyndighet;
            }
            // to ensure "dekketkrav" is required (not null)
            if (dekketkrav == null)
            {
                throw new InvalidDataException("dekketkrav is a required property for MotregningAvKreditkrav and cannot be null");
            }
            else
            {
                this.Dekketkrav = dekketkrav;
            }
            // to ensure "motregnetdato" is required (not null)
            if (motregnetdato == null)
            {
                throw new InvalidDataException("motregnetdato is a required property for MotregningAvKreditkrav and cannot be null");
            }
            else
            {
                this.Motregnetdato = motregnetdato;
            }
            this.Hovedkrav = hovedkrav;
        }
        
        /// <summary>
        /// Gets or Sets Motregningsidentifikator
        /// </summary>
        [DataMember(Name="motregningsidentifikator", EmitDefaultValue=false)]
        public string Motregningsidentifikator { get; set; }

        /// <summary>
        /// Gets or Sets Innkrevingsmyndighet
        /// </summary>
        [DataMember(Name="innkrevingsmyndighet", EmitDefaultValue=false)]
        public MultiSpraakTekst Innkrevingsmyndighet { get; set; }

        /// <summary>
        /// Gets or Sets Hovedkrav
        /// </summary>
        [DataMember(Name="hovedkrav", EmitDefaultValue=false)]
        public HovedKrav Hovedkrav { get; set; }

        /// <summary>
        /// kravet som blir dekket i motregningen; beskrivelse av dekket krav slik at det ser ut i disponeringsbrev; dekket krav her er ofte referert som motkrav i fagdomene.
        /// </summary>
        /// <value>kravet som blir dekket i motregningen; beskrivelse av dekket krav slik at det ser ut i disponeringsbrev; dekket krav her er ofte referert som motkrav i fagdomene.</value>
        [DataMember(Name="dekketkrav", EmitDefaultValue=false)]
        public List<DekketKrav> Dekketkrav { get; set; }

        /// <summary>
        /// Gets or Sets Motregnetdato
        /// </summary>
        [DataMember(Name="motregnetdato", EmitDefaultValue=false)]
        public DateTime? Motregnetdato { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MotregningAvKreditkrav {\n");
            sb.Append("  Motregningsidentifikator: ").Append(Motregningsidentifikator).Append("\n");
            sb.Append("  Innkrevingsmyndighet: ").Append(Innkrevingsmyndighet).Append("\n");
            sb.Append("  Hovedkrav: ").Append(Hovedkrav).Append("\n");
            sb.Append("  Dekketkrav: ").Append(Dekketkrav).Append("\n");
            sb.Append("  Motregnetdato: ").Append(Motregnetdato).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MotregningAvKreditkrav);
        }

        /// <summary>
        /// Returns true if MotregningAvKreditkrav instances are equal
        /// </summary>
        /// <param name="input">Instance of MotregningAvKreditkrav to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MotregningAvKreditkrav input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Motregningsidentifikator == input.Motregningsidentifikator ||
                    (this.Motregningsidentifikator != null &&
                    this.Motregningsidentifikator.Equals(input.Motregningsidentifikator))
                ) && 
                (
                    this.Innkrevingsmyndighet == input.Innkrevingsmyndighet ||
                    (this.Innkrevingsmyndighet != null &&
                    this.Innkrevingsmyndighet.Equals(input.Innkrevingsmyndighet))
                ) && 
                (
                    this.Hovedkrav == input.Hovedkrav ||
                    (this.Hovedkrav != null &&
                    this.Hovedkrav.Equals(input.Hovedkrav))
                ) && 
                (
                    this.Dekketkrav == input.Dekketkrav ||
                    this.Dekketkrav != null &&
                    input.Dekketkrav != null &&
                    this.Dekketkrav.SequenceEqual(input.Dekketkrav)
                ) && 
                (
                    this.Motregnetdato == input.Motregnetdato ||
                    (this.Motregnetdato != null &&
                    this.Motregnetdato.Equals(input.Motregnetdato))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Motregningsidentifikator != null)
                    hashCode = hashCode * 59 + this.Motregningsidentifikator.GetHashCode();
                if (this.Innkrevingsmyndighet != null)
                    hashCode = hashCode * 59 + this.Innkrevingsmyndighet.GetHashCode();
                if (this.Hovedkrav != null)
                    hashCode = hashCode * 59 + this.Hovedkrav.GetHashCode();
                if (this.Dekketkrav != null)
                    hashCode = hashCode * 59 + this.Dekketkrav.GetHashCode();
                if (this.Motregnetdato != null)
                    hashCode = hashCode * 59 + this.Motregnetdato.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
