/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilh√∏rende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// viser detaljer av hvilken motkrav er plassert mot krav
    /// </summary>
    [DataContract]
        public partial class KravPlassertMotKrav :  IEquatable<KravPlassertMotKrav>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KravPlassertMotKrav" /> class.
        /// </summary>
        /// <param name="kravforfallsIdentifikator">kravforfallsIdentifikator (required).</param>
        /// <param name="plassertBeloep">plassertBeloep (required).</param>
        /// <param name="plassertDato">plassertDato.</param>
        /// <param name="kravbeskrivelse">kravbeskrivelse.</param>
        /// <param name="forfallsdato">forfallsdato.</param>
        /// <param name="kravperiode">kravperiode.</param>
        /// <param name="kravtype">kravtype (required).</param>
        public KravPlassertMotKrav(string kravforfallsIdentifikator = default(string), double? plassertBeloep = default(double?), DateTime? plassertDato = default(DateTime?), MultiSpraakTekst kravbeskrivelse = default(MultiSpraakTekst), DateTime? forfallsdato = default(DateTime?), Kravperiode kravperiode = default(Kravperiode), string kravtype = default(string))
        {
            // to ensure "kravforfallsIdentifikator" is required (not null)
            if (kravforfallsIdentifikator == null)
            {
                throw new InvalidDataException("kravforfallsIdentifikator is a required property for KravPlassertMotKrav and cannot be null");
            }
            else
            {
                this.KravforfallsIdentifikator = kravforfallsIdentifikator;
            }
            // to ensure "plassertBeloep" is required (not null)
            if (plassertBeloep == null)
            {
                throw new InvalidDataException("plassertBeloep is a required property for KravPlassertMotKrav and cannot be null");
            }
            else
            {
                this.PlassertBeloep = plassertBeloep;
            }
            // to ensure "kravtype" is required (not null)
            if (kravtype == null)
            {
                throw new InvalidDataException("kravtype is a required property for KravPlassertMotKrav and cannot be null");
            }
            else
            {
                this.Kravtype = kravtype;
            }
            this.PlassertDato = plassertDato;
            this.Kravbeskrivelse = kravbeskrivelse;
            this.Forfallsdato = forfallsdato;
            this.Kravperiode = kravperiode;
        }
        
        /// <summary>
        /// Gets or Sets KravforfallsIdentifikator
        /// </summary>
        [DataMember(Name="kravforfallsIdentifikator", EmitDefaultValue=false)]
        public string KravforfallsIdentifikator { get; set; }

        /// <summary>
        /// Gets or Sets PlassertBeloep
        /// </summary>
        [DataMember(Name="plassertBeloep", EmitDefaultValue=false)]
        public double? PlassertBeloep { get; set; }

        /// <summary>
        /// Gets or Sets PlassertDato
        /// </summary>
        [DataMember(Name="plassertDato", EmitDefaultValue=false)]
        public DateTime? PlassertDato { get; set; }

        /// <summary>
        /// Gets or Sets Kravbeskrivelse
        /// </summary>
        [DataMember(Name="kravbeskrivelse", EmitDefaultValue=false)]
        public MultiSpraakTekst Kravbeskrivelse { get; set; }

        /// <summary>
        /// Gets or Sets Forfallsdato
        /// </summary>
        [DataMember(Name="forfallsdato", EmitDefaultValue=false)]
        public DateTime? Forfallsdato { get; set; }

        /// <summary>
        /// Gets or Sets Kravperiode
        /// </summary>
        [DataMember(Name="kravperiode", EmitDefaultValue=false)]
        public Kravperiode Kravperiode { get; set; }

        /// <summary>
        /// Gets or Sets Kravtype
        /// </summary>
        [DataMember(Name="kravtype", EmitDefaultValue=false)]
        public string Kravtype { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KravPlassertMotKrav {\n");
            sb.Append("  KravforfallsIdentifikator: ").Append(KravforfallsIdentifikator).Append("\n");
            sb.Append("  PlassertBeloep: ").Append(PlassertBeloep).Append("\n");
            sb.Append("  PlassertDato: ").Append(PlassertDato).Append("\n");
            sb.Append("  Kravbeskrivelse: ").Append(Kravbeskrivelse).Append("\n");
            sb.Append("  Forfallsdato: ").Append(Forfallsdato).Append("\n");
            sb.Append("  Kravperiode: ").Append(Kravperiode).Append("\n");
            sb.Append("  Kravtype: ").Append(Kravtype).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KravPlassertMotKrav);
        }

        /// <summary>
        /// Returns true if KravPlassertMotKrav instances are equal
        /// </summary>
        /// <param name="input">Instance of KravPlassertMotKrav to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KravPlassertMotKrav input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KravforfallsIdentifikator == input.KravforfallsIdentifikator ||
                    (this.KravforfallsIdentifikator != null &&
                    this.KravforfallsIdentifikator.Equals(input.KravforfallsIdentifikator))
                ) && 
                (
                    this.PlassertBeloep == input.PlassertBeloep ||
                    (this.PlassertBeloep != null &&
                    this.PlassertBeloep.Equals(input.PlassertBeloep))
                ) && 
                (
                    this.PlassertDato == input.PlassertDato ||
                    (this.PlassertDato != null &&
                    this.PlassertDato.Equals(input.PlassertDato))
                ) && 
                (
                    this.Kravbeskrivelse == input.Kravbeskrivelse ||
                    (this.Kravbeskrivelse != null &&
                    this.Kravbeskrivelse.Equals(input.Kravbeskrivelse))
                ) && 
                (
                    this.Forfallsdato == input.Forfallsdato ||
                    (this.Forfallsdato != null &&
                    this.Forfallsdato.Equals(input.Forfallsdato))
                ) && 
                (
                    this.Kravperiode == input.Kravperiode ||
                    (this.Kravperiode != null &&
                    this.Kravperiode.Equals(input.Kravperiode))
                ) && 
                (
                    this.Kravtype == input.Kravtype ||
                    (this.Kravtype != null &&
                    this.Kravtype.Equals(input.Kravtype))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KravforfallsIdentifikator != null)
                    hashCode = hashCode * 59 + this.KravforfallsIdentifikator.GetHashCode();
                if (this.PlassertBeloep != null)
                    hashCode = hashCode * 59 + this.PlassertBeloep.GetHashCode();
                if (this.PlassertDato != null)
                    hashCode = hashCode * 59 + this.PlassertDato.GetHashCode();
                if (this.Kravbeskrivelse != null)
                    hashCode = hashCode * 59 + this.Kravbeskrivelse.GetHashCode();
                if (this.Forfallsdato != null)
                    hashCode = hashCode * 59 + this.Forfallsdato.GetHashCode();
                if (this.Kravperiode != null)
                    hashCode = hashCode * 59 + this.Kravperiode.GetHashCode();
                if (this.Kravtype != null)
                    hashCode = hashCode * 59 + this.Kravtype.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
