/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilhørende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// Feilstruktur for alle feilmeldinger.
    /// </summary>
    [DataContract]
        public partial class Feil :  IEquatable<Feil>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Feil" /> class.
        /// </summary>
        /// <param name="kode">Feilkode, for maskinell håndtering.</param>
        /// <param name="melding">Beskrivelse av feilen som har oppstått.</param>
        /// <param name="korrelasjonsid">Korrelasjonsid.</param>
        public Feil(string kode = default(string), string melding = default(string), string korrelasjonsid = default(string))
        {
            this.Kode = kode;
            this.Melding = melding;
            this.Korrelasjonsid = korrelasjonsid;
        }
        
        /// <summary>
        /// Feilkode, for maskinell håndtering
        /// </summary>
        /// <value>Feilkode, for maskinell håndtering</value>
        [DataMember(Name="kode", EmitDefaultValue=false)]
        public string Kode { get; set; }

        /// <summary>
        /// Beskrivelse av feilen som har oppstått
        /// </summary>
        /// <value>Beskrivelse av feilen som har oppstått</value>
        [DataMember(Name="melding", EmitDefaultValue=false)]
        public string Melding { get; set; }

        /// <summary>
        /// Korrelasjonsid
        /// </summary>
        /// <value>Korrelasjonsid</value>
        [DataMember(Name="korrelasjonsid", EmitDefaultValue=false)]
        public string Korrelasjonsid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Feil {\n");
            sb.Append("  Kode: ").Append(Kode).Append("\n");
            sb.Append("  Melding: ").Append(Melding).Append("\n");
            sb.Append("  Korrelasjonsid: ").Append(Korrelasjonsid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Feil);
        }

        /// <summary>
        /// Returns true if Feil instances are equal
        /// </summary>
        /// <param name="input">Instance of Feil to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Feil input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Kode == input.Kode ||
                    (this.Kode != null &&
                    this.Kode.Equals(input.Kode))
                ) && 
                (
                    this.Melding == input.Melding ||
                    (this.Melding != null &&
                    this.Melding.Equals(input.Melding))
                ) && 
                (
                    this.Korrelasjonsid == input.Korrelasjonsid ||
                    (this.Korrelasjonsid != null &&
                    this.Korrelasjonsid.Equals(input.Korrelasjonsid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Kode != null)
                    hashCode = hashCode * 59 + this.Kode.GetHashCode();
                if (this.Melding != null)
                    hashCode = hashCode * 59 + this.Melding.GetHashCode();
                if (this.Korrelasjonsid != null)
                    hashCode = hashCode * 59 + this.Korrelasjonsid.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
