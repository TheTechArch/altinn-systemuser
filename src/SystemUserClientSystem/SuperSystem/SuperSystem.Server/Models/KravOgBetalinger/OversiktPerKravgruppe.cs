/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilhørende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// oversikt over saldo, stipulerte renter og krav (forfallte og ikke forfalte) gruppert per kravgrupe ved forespørsels tidspunkt
    /// </summary>
    [DataContract]
        public partial class OversiktPerKravgruppe :  IEquatable<OversiktPerKravgruppe>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OversiktPerKravgruppe" /> class.
        /// </summary>
        /// <param name="kravgruppe">kravgruppe (required).</param>
        /// <param name="sumStipulerteRenter">sumStipulerteRenter (required).</param>
        /// <param name="sumForfalteKrav">sumForfalteKrav (required).</param>
        /// <param name="sumIkkeForfalteKrav">sumIkkeForfalteKrav (required).</param>
        /// <param name="saldo">saldo (required).</param>
        public OversiktPerKravgruppe(string kravgruppe = default(string), double? sumStipulerteRenter = default(double?), double? sumForfalteKrav = default(double?), double? sumIkkeForfalteKrav = default(double?), double? saldo = default(double?))
        {
            // to ensure "kravgruppe" is required (not null)
            if (kravgruppe == null)
            {
                throw new InvalidDataException("kravgruppe is a required property for OversiktPerKravgruppe and cannot be null");
            }
            else
            {
                this.Kravgruppe = kravgruppe;
            }
            // to ensure "sumStipulerteRenter" is required (not null)
            if (sumStipulerteRenter == null)
            {
                throw new InvalidDataException("sumStipulerteRenter is a required property for OversiktPerKravgruppe and cannot be null");
            }
            else
            {
                this.SumStipulerteRenter = sumStipulerteRenter;
            }
            // to ensure "sumForfalteKrav" is required (not null)
            if (sumForfalteKrav == null)
            {
                throw new InvalidDataException("sumForfalteKrav is a required property for OversiktPerKravgruppe and cannot be null");
            }
            else
            {
                this.SumForfalteKrav = sumForfalteKrav;
            }
            // to ensure "sumIkkeForfalteKrav" is required (not null)
            if (sumIkkeForfalteKrav == null)
            {
                throw new InvalidDataException("sumIkkeForfalteKrav is a required property for OversiktPerKravgruppe and cannot be null");
            }
            else
            {
                this.SumIkkeForfalteKrav = sumIkkeForfalteKrav;
            }
            // to ensure "saldo" is required (not null)
            if (saldo == null)
            {
                throw new InvalidDataException("saldo is a required property for OversiktPerKravgruppe and cannot be null");
            }
            else
            {
                this.Saldo = saldo;
            }
        }
        
        /// <summary>
        /// Gets or Sets Kravgruppe
        /// </summary>
        [DataMember(Name="kravgruppe", EmitDefaultValue=false)]
        public string Kravgruppe { get; set; }

        /// <summary>
        /// Gets or Sets SumStipulerteRenter
        /// </summary>
        [DataMember(Name="sumStipulerteRenter", EmitDefaultValue=false)]
        public double? SumStipulerteRenter { get; set; }

        /// <summary>
        /// Gets or Sets SumForfalteKrav
        /// </summary>
        [DataMember(Name="sumForfalteKrav", EmitDefaultValue=false)]
        public double? SumForfalteKrav { get; set; }

        /// <summary>
        /// Gets or Sets SumIkkeForfalteKrav
        /// </summary>
        [DataMember(Name="sumIkkeForfalteKrav", EmitDefaultValue=false)]
        public double? SumIkkeForfalteKrav { get; set; }

        /// <summary>
        /// Gets or Sets Saldo
        /// </summary>
        [DataMember(Name="saldo", EmitDefaultValue=false)]
        public double? Saldo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OversiktPerKravgruppe {\n");
            sb.Append("  Kravgruppe: ").Append(Kravgruppe).Append("\n");
            sb.Append("  SumStipulerteRenter: ").Append(SumStipulerteRenter).Append("\n");
            sb.Append("  SumForfalteKrav: ").Append(SumForfalteKrav).Append("\n");
            sb.Append("  SumIkkeForfalteKrav: ").Append(SumIkkeForfalteKrav).Append("\n");
            sb.Append("  Saldo: ").Append(Saldo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OversiktPerKravgruppe);
        }

        /// <summary>
        /// Returns true if OversiktPerKravgruppe instances are equal
        /// </summary>
        /// <param name="input">Instance of OversiktPerKravgruppe to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OversiktPerKravgruppe input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Kravgruppe == input.Kravgruppe ||
                    (this.Kravgruppe != null &&
                    this.Kravgruppe.Equals(input.Kravgruppe))
                ) && 
                (
                    this.SumStipulerteRenter == input.SumStipulerteRenter ||
                    (this.SumStipulerteRenter != null &&
                    this.SumStipulerteRenter.Equals(input.SumStipulerteRenter))
                ) && 
                (
                    this.SumForfalteKrav == input.SumForfalteKrav ||
                    (this.SumForfalteKrav != null &&
                    this.SumForfalteKrav.Equals(input.SumForfalteKrav))
                ) && 
                (
                    this.SumIkkeForfalteKrav == input.SumIkkeForfalteKrav ||
                    (this.SumIkkeForfalteKrav != null &&
                    this.SumIkkeForfalteKrav.Equals(input.SumIkkeForfalteKrav))
                ) && 
                (
                    this.Saldo == input.Saldo ||
                    (this.Saldo != null &&
                    this.Saldo.Equals(input.Saldo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Kravgruppe != null)
                    hashCode = hashCode * 59 + this.Kravgruppe.GetHashCode();
                if (this.SumStipulerteRenter != null)
                    hashCode = hashCode * 59 + this.SumStipulerteRenter.GetHashCode();
                if (this.SumForfalteKrav != null)
                    hashCode = hashCode * 59 + this.SumForfalteKrav.GetHashCode();
                if (this.SumIkkeForfalteKrav != null)
                    hashCode = hashCode * 59 + this.SumIkkeForfalteKrav.GetHashCode();
                if (this.Saldo != null)
                    hashCode = hashCode * 59 + this.Saldo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
