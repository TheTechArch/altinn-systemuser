/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilh√∏rende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// GrunnlagForUtbetaling
    /// </summary>
    [DataContract]
        public partial class GrunnlagForUtbetaling :  IEquatable<GrunnlagForUtbetaling>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GrunnlagForUtbetaling" /> class.
        /// </summary>
        /// <param name="kreditKrav">kreditKrav.</param>
        /// <param name="tilbakebetalingAv">tilbakebetalingAv.</param>
        public GrunnlagForUtbetaling(List<KreditKrav> kreditKrav = default(List<KreditKrav>), List<InnbetalingPlassertMotUtbetaling> tilbakebetalingAv = default(List<InnbetalingPlassertMotUtbetaling>))
        {
            this.KreditKrav = kreditKrav;
            this.TilbakebetalingAv = tilbakebetalingAv;
        }
        
        /// <summary>
        /// Gets or Sets KreditKrav
        /// </summary>
        [DataMember(Name="kreditKrav", EmitDefaultValue=false)]
        public List<KreditKrav> KreditKrav { get; set; }

        /// <summary>
        /// Gets or Sets TilbakebetalingAv
        /// </summary>
        [DataMember(Name="tilbakebetalingAv", EmitDefaultValue=false)]
        public List<InnbetalingPlassertMotUtbetaling> TilbakebetalingAv { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GrunnlagForUtbetaling {\n");
            sb.Append("  KreditKrav: ").Append(KreditKrav).Append("\n");
            sb.Append("  TilbakebetalingAv: ").Append(TilbakebetalingAv).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GrunnlagForUtbetaling);
        }

        /// <summary>
        /// Returns true if GrunnlagForUtbetaling instances are equal
        /// </summary>
        /// <param name="input">Instance of GrunnlagForUtbetaling to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GrunnlagForUtbetaling input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KreditKrav == input.KreditKrav ||
                    this.KreditKrav != null &&
                    input.KreditKrav != null &&
                    this.KreditKrav.SequenceEqual(input.KreditKrav)
                ) && 
                (
                    this.TilbakebetalingAv == input.TilbakebetalingAv ||
                    this.TilbakebetalingAv != null &&
                    input.TilbakebetalingAv != null &&
                    this.TilbakebetalingAv.SequenceEqual(input.TilbakebetalingAv)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KreditKrav != null)
                    hashCode = hashCode * 59 + this.KreditKrav.GetHashCode();
                if (this.TilbakebetalingAv != null)
                    hashCode = hashCode * 59 + this.TilbakebetalingAv.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
