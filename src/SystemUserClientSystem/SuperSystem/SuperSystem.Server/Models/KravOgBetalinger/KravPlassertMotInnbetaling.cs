/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilhørende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// angivelse av beløp fra kreditpost som går til dekning av debetpost (&lt;a href&#x3D;&#x27;http://begrepskatalog/begrep/35c63137-86e6-11e6-a97e-ba992a0501a6&#x27;&gt;Begrepsreferanse&lt;/a&gt;)
    /// </summary>
    [DataContract]
        public partial class KravPlassertMotInnbetaling :  IEquatable<KravPlassertMotInnbetaling>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KravPlassertMotInnbetaling" /> class.
        /// </summary>
        /// <param name="kravforfallIdentifikator">kravforfallIdentifikator (required).</param>
        /// <param name="plassertBeloep">plassertBeloep (required).</param>
        /// <param name="plassertDato">plassertDato.</param>
        /// <param name="kravbeskrivelse">kravbeskrivelse.</param>
        /// <param name="kravforfallsdato">kravforfallsdato.</param>
        /// <param name="opprinneligKravforfallsbeloep">opprinneligKravforfallsbeloep.</param>
        /// <param name="gjenstaaendeKravforfallsbeloep">gjenstaaendeKravforfallsbeloep.</param>
        public KravPlassertMotInnbetaling(string kravforfallIdentifikator = default(string), double? plassertBeloep = default(double?), DateTime? plassertDato = default(DateTime?), MultiSpraakTekst kravbeskrivelse = default(MultiSpraakTekst), DateTime? kravforfallsdato = default(DateTime?), double? opprinneligKravforfallsbeloep = default(double?), double? gjenstaaendeKravforfallsbeloep = default(double?))
        {
            // to ensure "kravforfallIdentifikator" is required (not null)
            if (kravforfallIdentifikator == null)
            {
                throw new InvalidDataException("kravforfallIdentifikator is a required property for KravPlassertMotInnbetaling and cannot be null");
            }
            else
            {
                this.KravforfallIdentifikator = kravforfallIdentifikator;
            }
            // to ensure "plassertBeloep" is required (not null)
            if (plassertBeloep == null)
            {
                throw new InvalidDataException("plassertBeloep is a required property for KravPlassertMotInnbetaling and cannot be null");
            }
            else
            {
                this.PlassertBeloep = plassertBeloep;
            }
            this.PlassertDato = plassertDato;
            this.Kravbeskrivelse = kravbeskrivelse;
            this.Kravforfallsdato = kravforfallsdato;
            this.OpprinneligKravforfallsbeloep = opprinneligKravforfallsbeloep;
            this.GjenstaaendeKravforfallsbeloep = gjenstaaendeKravforfallsbeloep;
        }
        
        /// <summary>
        /// Gets or Sets KravforfallIdentifikator
        /// </summary>
        [DataMember(Name="kravforfallIdentifikator", EmitDefaultValue=false)]
        public string KravforfallIdentifikator { get; set; }

        /// <summary>
        /// Gets or Sets PlassertBeloep
        /// </summary>
        [DataMember(Name="plassertBeloep", EmitDefaultValue=false)]
        public double? PlassertBeloep { get; set; }

        /// <summary>
        /// Gets or Sets PlassertDato
        /// </summary>
        [DataMember(Name="plassertDato", EmitDefaultValue=false)]
        public DateTime? PlassertDato { get; set; }

        /// <summary>
        /// Gets or Sets Kravbeskrivelse
        /// </summary>
        [DataMember(Name="kravbeskrivelse", EmitDefaultValue=false)]
        public MultiSpraakTekst Kravbeskrivelse { get; set; }

        /// <summary>
        /// Gets or Sets Kravforfallsdato
        /// </summary>
        [DataMember(Name="kravforfallsdato", EmitDefaultValue=false)]
        public DateTime? Kravforfallsdato { get; set; }

        /// <summary>
        /// Gets or Sets OpprinneligKravforfallsbeloep
        /// </summary>
        [DataMember(Name="opprinneligKravforfallsbeloep", EmitDefaultValue=false)]
        public double? OpprinneligKravforfallsbeloep { get; set; }

        /// <summary>
        /// Gets or Sets GjenstaaendeKravforfallsbeloep
        /// </summary>
        [DataMember(Name="gjenstaaendeKravforfallsbeloep", EmitDefaultValue=false)]
        public double? GjenstaaendeKravforfallsbeloep { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KravPlassertMotInnbetaling {\n");
            sb.Append("  KravforfallIdentifikator: ").Append(KravforfallIdentifikator).Append("\n");
            sb.Append("  PlassertBeloep: ").Append(PlassertBeloep).Append("\n");
            sb.Append("  PlassertDato: ").Append(PlassertDato).Append("\n");
            sb.Append("  Kravbeskrivelse: ").Append(Kravbeskrivelse).Append("\n");
            sb.Append("  Kravforfallsdato: ").Append(Kravforfallsdato).Append("\n");
            sb.Append("  OpprinneligKravforfallsbeloep: ").Append(OpprinneligKravforfallsbeloep).Append("\n");
            sb.Append("  GjenstaaendeKravforfallsbeloep: ").Append(GjenstaaendeKravforfallsbeloep).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KravPlassertMotInnbetaling);
        }

        /// <summary>
        /// Returns true if KravPlassertMotInnbetaling instances are equal
        /// </summary>
        /// <param name="input">Instance of KravPlassertMotInnbetaling to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KravPlassertMotInnbetaling input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.KravforfallIdentifikator == input.KravforfallIdentifikator ||
                    (this.KravforfallIdentifikator != null &&
                    this.KravforfallIdentifikator.Equals(input.KravforfallIdentifikator))
                ) && 
                (
                    this.PlassertBeloep == input.PlassertBeloep ||
                    (this.PlassertBeloep != null &&
                    this.PlassertBeloep.Equals(input.PlassertBeloep))
                ) && 
                (
                    this.PlassertDato == input.PlassertDato ||
                    (this.PlassertDato != null &&
                    this.PlassertDato.Equals(input.PlassertDato))
                ) && 
                (
                    this.Kravbeskrivelse == input.Kravbeskrivelse ||
                    (this.Kravbeskrivelse != null &&
                    this.Kravbeskrivelse.Equals(input.Kravbeskrivelse))
                ) && 
                (
                    this.Kravforfallsdato == input.Kravforfallsdato ||
                    (this.Kravforfallsdato != null &&
                    this.Kravforfallsdato.Equals(input.Kravforfallsdato))
                ) && 
                (
                    this.OpprinneligKravforfallsbeloep == input.OpprinneligKravforfallsbeloep ||
                    (this.OpprinneligKravforfallsbeloep != null &&
                    this.OpprinneligKravforfallsbeloep.Equals(input.OpprinneligKravforfallsbeloep))
                ) && 
                (
                    this.GjenstaaendeKravforfallsbeloep == input.GjenstaaendeKravforfallsbeloep ||
                    (this.GjenstaaendeKravforfallsbeloep != null &&
                    this.GjenstaaendeKravforfallsbeloep.Equals(input.GjenstaaendeKravforfallsbeloep))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.KravforfallIdentifikator != null)
                    hashCode = hashCode * 59 + this.KravforfallIdentifikator.GetHashCode();
                if (this.PlassertBeloep != null)
                    hashCode = hashCode * 59 + this.PlassertBeloep.GetHashCode();
                if (this.PlassertDato != null)
                    hashCode = hashCode * 59 + this.PlassertDato.GetHashCode();
                if (this.Kravbeskrivelse != null)
                    hashCode = hashCode * 59 + this.Kravbeskrivelse.GetHashCode();
                if (this.Kravforfallsdato != null)
                    hashCode = hashCode * 59 + this.Kravforfallsdato.GetHashCode();
                if (this.OpprinneligKravforfallsbeloep != null)
                    hashCode = hashCode * 59 + this.OpprinneligKravforfallsbeloep.GetHashCode();
                if (this.GjenstaaendeKravforfallsbeloep != null)
                    hashCode = hashCode * 59 + this.GjenstaaendeKravforfallsbeloep.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
