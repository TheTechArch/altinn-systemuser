/* 
 * Krav og betalinger API
 *
 * Tjeneste som tilbyr oversikt av krav, innbetalinger og utbetalinger tilhørende en part.
 *
 * OpenAPI spec version: 1.1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// tekster som representerer samme mening på flere språk (&lt;a href&#x3D;&#x27;https://data.skatteetaten.no/begrep/20b2e242-9fe1-11e5-a9f8-e4115b280940&#x27;&gt;Begrepsreferanse&lt;/a&gt;)
    /// </summary>
    [DataContract]
        public partial class MultiSpraakTekst :  IEquatable<MultiSpraakTekst>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MultiSpraakTekst" /> class.
        /// </summary>
        /// <param name="spraakTekst">(&lt;a href&#x3D;&#x27;https://data.skatteetaten.no/begrep/20b2e244-9fe1-11e5-a9f8-e4115b280940&#x27;&gt;Begrepsreferanse&lt;/a&gt;) (required).</param>
        public MultiSpraakTekst(List<SpraakTekst> spraakTekst = default(List<SpraakTekst>))
        {
            // to ensure "spraakTekst" is required (not null)
            if (spraakTekst == null)
            {
                throw new InvalidDataException("spraakTekst is a required property for MultiSpraakTekst and cannot be null");
            }
            else
            {
                this.SpraakTekst = spraakTekst;
            }
        }
        
        /// <summary>
        /// (&lt;a href&#x3D;&#x27;https://data.skatteetaten.no/begrep/20b2e244-9fe1-11e5-a9f8-e4115b280940&#x27;&gt;Begrepsreferanse&lt;/a&gt;)
        /// </summary>
        /// <value>(&lt;a href&#x3D;&#x27;https://data.skatteetaten.no/begrep/20b2e244-9fe1-11e5-a9f8-e4115b280940&#x27;&gt;Begrepsreferanse&lt;/a&gt;)</value>
        [DataMember(Name="spraakTekst", EmitDefaultValue=false)]
        public List<SpraakTekst> SpraakTekst { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MultiSpraakTekst {\n");
            sb.Append("  SpraakTekst: ").Append(SpraakTekst).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MultiSpraakTekst);
        }

        /// <summary>
        /// Returns true if MultiSpraakTekst instances are equal
        /// </summary>
        /// <param name="input">Instance of MultiSpraakTekst to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MultiSpraakTekst input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SpraakTekst == input.SpraakTekst ||
                    this.SpraakTekst != null &&
                    input.SpraakTekst != null &&
                    this.SpraakTekst.SequenceEqual(input.SpraakTekst)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SpraakTekst != null)
                    hashCode = hashCode * 59 + this.SpraakTekst.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
